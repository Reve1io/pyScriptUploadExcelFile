name: Deploy to Production Server

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run syntax and import checks
      run: |
        python -m py_compile app.py
        python -c "
        try:
            import flask, pandas, requests, zeep, werkzeug, dotenv
            print('‚úÖ All imports successful')
        except ImportError as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        "

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          set -e  # Exit on error
          echo "üöÄ Starting deployment..."
          
          # Navigate to project directory
          cd /home/pyScriptUploadExcelFile
          
          # Backup current version
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          cp -r . ../backup_$TIMESTAMP 2>/dev/null || true
          echo "‚úÖ Backup created: backup_$TIMESTAMP"
          
          # Pull latest changes
          git fetch --all
          git reset --hard origin/main
          echo "‚úÖ Code updated from GitHub"
          
          # Activate virtual environment
          source venv/bin/activate
          
          # Install/update dependencies - –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º pip3
          pip3 install --upgrade pip
          pip3 install -r requirements.txt
          echo "‚úÖ Dependencies updated"
          
          # Create necessary directories
          mkdir -p uploads ftp_uploads logs static templates
          echo "‚úÖ Directories checked"
          
          # Set proper permissions
          chmod -R 755 static/ templates/
          chmod 644 *.py requirements.txt
          echo "‚úÖ Permissions set"
          
          # Restart application service
          sudo systemctl daemon-reload
          sudo systemctl restart flaskapp
          echo "‚úÖ Application restarted"
          
          # Wait for service to start
          sleep 5
          
          # Check service status
          if sudo systemctl is-active --quiet flaskapp; then
            echo "üéâ Deployment completed successfully!"
            
            # Health check
            if curl -f http://localhost:5001/ > /dev/null 2>&1; then
              echo "‚úÖ Health check passed"
            else
              echo "‚ö†Ô∏è Health check failed, but service is running"
            fi
            
          else
            echo "‚ùå Service failed to start"
            sudo systemctl status flaskapp
            exit 1
          fi
